generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHERS
}

model User {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  email String @unique
  password String
  name String?
  gender Gender?
  posts Post[]
  comments Comment[]
  likes Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

enum PostType {
  IMAGE
  REEL
}

model Post {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  content String
  category PostType
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
  likes Like[]
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  message String
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id String @id @default(auto()) @db.ObjectId @map("_id")
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}